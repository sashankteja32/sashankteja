{"version":3,"sources":["components/InterviewQuestion/index.js","components/InterviewQuestionsApp/index.js","App.js","index.js"],"names":["InterviewQuestion","state","isAnswer","checking","clickingAnswer","event","data","props","question","countingFun","correctAnswer","target","value","console","log","setState","renderFun","className","this","questions","wrongAnswers","set1","sort","one","two","three","four","Array","from","type","name","id","onChange","disabled","htmlFor","Component","InterviewQuestionsApp","questionsList","showResult","count","getQuetions","a","options","method","fetch","response","json","fetchedData","updatedData","results","map","quetion","correct_answer","incorrect_answers","prevCount","totalScore","src","alt","eachQuestion","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.202a651e.chunk.js","sourcesContent":["import {Component} from 'react'\n\nimport './index.css'\n\nclass InterviewQuestion extends Component {\n  state = {\n    isAnswer: false,\n    checking: false,\n  }\n\n  clickingAnswer = event => {\n    const {question, countingFun} = this.props\n    const {correctAnswer} = question\n\n    let data\n    if (event.target.value === correctAnswer) {\n      data = true\n      countingFun()\n    } else {\n      data = false\n    }\n    console.log(data)\n    this.setState({isAnswer: true, checking: data})\n  }\n\n  renderFun = () => {\n    const {checking} = this.state\n    if (checking === true) {\n      return <p className=\"correct\">Correct</p>\n    }\n    return <p className=\"wrong\">Wrong</p>\n  }\n\n  render() {\n    const {question} = this.props\n    const {questions, correctAnswer, wrongAnswers} = question\n    const set1 = [...wrongAnswers, correctAnswer]\n    set1.sort()\n    const [one, two, three, four] = set1\n    const {isAnswer} = this.state\n    console.log(Array.from(set1))\n    return (\n      <div className=\"question-container\">\n        <h1 className=\"question-text\">{questions}</h1>\n        <div>\n          <div>\n            <input\n              type=\"radio\"\n              value={one}\n              name={correctAnswer}\n              id={one}\n              onChange={this.clickingAnswer}\n              disabled={isAnswer}\n            />\n            <label htmlFor={one}>{one}</label>\n          </div>\n          <div>\n            <input\n              type=\"radio\"\n              value={four}\n              name={correctAnswer}\n              id={four}\n              onChange={this.clickingAnswer}\n              disabled={isAnswer}\n            />\n            <label htmlFor={four}>{four}</label>\n          </div>\n          <div>\n            <input\n              type=\"radio\"\n              value={two}\n              name={correctAnswer}\n              id={two}\n              onChange={this.clickingAnswer}\n              disabled={isAnswer}\n            />\n            <label htmlFor={two}>{two}</label>\n          </div>\n          <div>\n            <input\n              type=\"radio\"\n              value={three}\n              name={correctAnswer}\n              id={three}\n              onChange={this.clickingAnswer}\n              disabled={isAnswer}\n            />\n            <label htmlFor={three}>{three}</label>\n          </div>\n        </div>\n        {isAnswer && this.renderFun()}\n      </div>\n    )\n  }\n}\n\nexport default InterviewQuestion\n","import {Component} from 'react'\n\nimport InterviewQuestion from '../InterviewQuestion'\nimport './index.css'\n\nclass InterviewQuestionsApp extends Component {\n  state = {\n    questionsList: [],\n    showResult: false,\n    count: 0,\n  }\n\n  componentDidMount() {\n    this.getQuetions()\n  }\n\n  getQuetions = async () => {\n    const api =\n      'https://opentdb.com/api.php?amount=10&category=18&difficulty=medium&type=multiple'\n    const options = {\n      method: 'GET',\n    }\n    const response = await fetch(api, options)\n    const fetchedData = await response.json()\n    const updatedData = fetchedData.results.map(quetion => ({\n      questions: quetion.question,\n      correctAnswer: quetion.correct_answer,\n      wrongAnswers: quetion.incorrect_answers,\n    }))\n    this.setState({questionsList: updatedData})\n  }\n\n  countingFun = () => {\n    this.setState(prevCount => ({count: prevCount.count + 1}))\n  }\n\n  totalScore = () => {\n    this.setState({showResult: true})\n  }\n\n  render() {\n    const {questionsList, showResult, count} = this.state\n    return (\n      <div className=\"app-container\">\n        <div className=\"heading-container\">\n          <h1 className=\"heading\">15 Minutes of Interview</h1>\n          <img\n            className=\"interview-image\"\n            src=\"https://assets.ccbp.in/frontend/react-js/interview-questions-img.png\"\n            alt=\"img\"\n          />\n        </div>\n        <div className=\"filter-container\">\n          <div className=\"questions-container\">\n            {questionsList.map(eachQuestion => (\n              <InterviewQuestion\n                question={eachQuestion}\n                countingFun={this.countingFun}\n              />\n            ))}\n          </div>\n        </div>\n        <button type=\"button\" onClick={this.totalScore} className=\"button\">\n          Submit\n        </button>\n        {showResult && <h1 className=\"score\">{count}/10</h1>}\n      </div>\n    )\n  }\n}\n\nexport default InterviewQuestionsApp\n","import InterviewQuestionsApp from './components/InterviewQuestionsApp'\nimport './App.css'\n\nconst App = () => <InterviewQuestionsApp />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}